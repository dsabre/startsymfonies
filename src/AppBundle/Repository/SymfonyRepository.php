<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Symfony;

/**
 * SymfonyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SymfonyRepository extends \Doctrine\ORM\EntityRepository{
	
	/**
	 * Return all symfonies ordinated
	 *
	 * @return array
	 */
	public function getAll(){
		return $this->findBy([], ['starred' => 'DESC', 'path' => 'ASC', 'ip' => 'DESC']);
	}
	
	/**
	 * Return all active symfonies
	 *
	 * @return array
	 */
	public function getActives(){
		$q = $this->createQueryBuilder('s');
		$q
			->where('s.status = 1')
		;
		
		return $q->getQuery()->getResult();
	}
	
	/**
	 * Return all active symfonies
	 *
	 * @return array
	 */
	public function getInactives(){
		$q = $this->createQueryBuilder('s');
		$q
			->where('s.status = 0')
		;
		
		return $q->getQuery()->getResult();
	}
	
	/**
	 * Return the symfony with the max local ip
	 *
	 * @return Symfony
	 */
	public function getMaxLocalSymfonyByIp(){
		$symfonies = $this->getActives();
		
		if(!$symfonies){
			return null;
		}
		
		$maxIp = 0;
		$ret = null;
		$localIpPrefix = '127.0.0.';
		
		/** @var Symfony $symfony */
		foreach($symfonies as $symfony){
			$ip = $symfony->getIp();
			
			if(!preg_match('/^' . $localIpPrefix . '\d/', $ip)){
				continue;
			}
			
			$ip = (int)str_replace($localIpPrefix, '', $ip);
			
			if($ip > $maxIp){
				$maxIp = $ip;
				$ret = $symfony;
			}
		}
		
		return $ret;
	}
	
	/**
	 * Return the symfony with the max local port
	 *
	 * @return Symfony
	 */
	public function getMaxLocalSymfonyByPort(){
		$q = $this->createQueryBuilder('s');
		$q
			->where('s.port IS NOT NULL')
			->orderBy('s.port', 'DESC')
			->setMaxResults(1)
		;
		
		$results = $q->getQuery()->getResult();
		
		return count($results) > 0 ? $results[0] : null;
	}
	
}
